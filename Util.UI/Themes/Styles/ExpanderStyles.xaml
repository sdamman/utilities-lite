<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:ALMACO.UI"
                    xmlns:gui="clr-namespace:ALMACO.UI.UserControls"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    mc:Ignorable="d" >
    
  
  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0"
                       StrokeDashArray="1 2" 
                       Stroke="Black" 
                       StrokeThickness="1" 
                       SnapsToDevicePixels="true"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="border" Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Ellipse x:Name="circle" 
                       Fill="{theme:ThemeResource ResourceKey=MutedAccent}"
                       d:Fill="{StaticResource brushCombineBlue}"
                       Stroke="{theme:ThemeResource ResourceKey=MaxContrast}"
                       d:Stroke="Red"
                       d:StrokeThickness="1"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"
                       Height="19" 
                       Width="19"/>
              <Path x:Name="arrow" 
                    Data="m0,4 l2,-2 l4.5,4.5 l4.5,-4.5 l2,2 l-6.5,6.5" 
                    Fill="{theme:ThemeResource ResourceKey=MaxContrast}" 
                    d:Fill="White"
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"
                    SnapsToDevicePixels="false"/>
              <ContentPresenter Grid.Column="1" 
                                Style="{StaticResource ContentPresenterHeading}" 
                                d:Style="{StaticResource ContentPresenterHeading}"
                                Margin="4,0,0,0" 
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="True"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" 
                      TargetName="arrow" 
                      Value="m0,6 l2,2 l4.5,-4.5 l4.5,4.5 l2,-2 l-6.5,-6.5z"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Fill" TargetName="circle" 
                      Value="{theme:ThemeResource ResourceKey=BoldHighlight}"/>
              <Setter Property="Fill" TargetName="arrow" 
                      Value="{theme:ThemeResource ResourceKey=MinContrast}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Fill" TargetName="circle" 
                      Value="{theme:ThemeResource ResourceKey=MutedAccent}"/>
              <Setter Property="Fill" TargetName="arrow" 
                      Value="{theme:ThemeResource ResourceKey=MaxContrast}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" TargetName="border" 
                      Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="border" 
                  Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="180"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse x:Name="circle" 
                       Fill="{theme:ThemeResource ResourceKey=MutedAccent}"
                       Stroke="{theme:ThemeResource ResourceKey=MutedAccent}"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"
                       Height="19" 
                       Width="19"/>
                <Path x:Name="arrow" 
                    Data="m0,4 l2,-2 l4.5,4.5 l4.5,-4.5 l2,2 l-6.5,6.5" 
                    Fill="{theme:ThemeResource ResourceKey=MaxContrast}" 
                    d:Fill="White"
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"
                    SnapsToDevicePixels="false"/>
              </Grid>
              <ContentPresenter Grid.Column="1" 
                                Style="{StaticResource ContentPresenterHeading}" 
                                d:Style="{StaticResource ContentPresenterHeading}"
                                Margin="4,0,0,0" 
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="True"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" 
                      TargetName="arrow" 
                      Value="m0,6 l2,2 l4.5,-4.5 l4.5,4.5 l2,-2 l-6.5,-6.5z"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Fill" TargetName="circle" 
                      Value="{theme:ThemeResource ResourceKey=BoldHighlight}"/>
              <Setter Property="Fill" TargetName="arrow" 
                      Value="{theme:ThemeResource ResourceKey=MinContrast}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Fill" TargetName="circle" 
                      Value="{theme:ThemeResource ResourceKey=MutedAccent}"/>
              <Setter Property="Fill" TargetName="arrow" 
                      Value="{theme:ThemeResource ResourceKey=MaxContrast}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" TargetName="border" 
                      Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="border" 
                  Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="90"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse x:Name="circle" 
                       Fill="{theme:ThemeResource ResourceKey=MutedAccent}"
                       Stroke="{theme:ThemeResource ResourceKey=MutedAccent}"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"
                       Height="19" 
                       Width="19"/>
                <Path x:Name="arrow" 
                    Data="m0,4 l2,-2 l4.5,4.5 l4.5,-4.5 l2,2 l-6.5,6.5" 
                    Fill="{theme:ThemeResource ResourceKey=MaxContrast}" 
                    d:Fill="White"
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"
                    SnapsToDevicePixels="false"/>
              </Grid>
              <ContentPresenter Grid.Row="1" 
                                Style="{StaticResource ContentPresenterHeading}" 
                                d:Style="{StaticResource ContentPresenterHeading}"
                                Margin="4,0,0,0" 
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="True"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Fill" TargetName="circle" 
                      Value="{theme:ThemeResource ResourceKey=BoldHighlight}"/>
              <Setter Property="Fill" TargetName="arrow" 
                      Value="{theme:ThemeResource ResourceKey=MinContrast}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Fill" TargetName="circle" 
                      Value="{theme:ThemeResource ResourceKey=MutedAccent}"/>
              <Setter Property="Fill" TargetName="arrow" 
                      Value="{theme:ThemeResource ResourceKey=MaxContrast}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" TargetName="border" 
                      Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="border" 
                  Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="-90"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse x:Name="circle" 
                       Fill="{theme:ThemeResource ResourceKey=MutedAccent}"
                       Stroke="{theme:ThemeResource ResourceKey=MutedAccent}"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"
                       Height="19" 
                       Width="19"/>
                <Path x:Name="arrow" 
                    Data="m0,4 l2,-2 l4.5,4.5 l4.5,-4.5 l2,2 l-6.5,6.5" 
                    Fill="{theme:ThemeResource ResourceKey=MaxContrast}" 
                    d:Fill="White"
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"
                    SnapsToDevicePixels="false"/>
              </Grid>
              <ContentPresenter Grid.Row="1" 
                                Style="{StaticResource ContentPresenterHeading}" 
                                d:Style="{StaticResource ContentPresenterHeading}"
                                Margin="4,0,0,0" 
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="True"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Fill" TargetName="circle" 
                      Value="{theme:ThemeResource ResourceKey=BoldHighlight}"/>
              <Setter Property="Fill" TargetName="arrow" 
                      Value="{theme:ThemeResource ResourceKey=MinContrast}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Fill" TargetName="circle" 
                      Value="{theme:ThemeResource ResourceKey=MutedAccent}"/>
              <Setter Property="Fill" TargetName="arrow" 
                      Value="{theme:ThemeResource ResourceKey=MaxContrast}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Opacity" TargetName="border" 
                      Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border Background="{TemplateBinding Background}" 
                  BorderBrush="{TemplateBinding BorderBrush}" 
                  BorderThickness="{TemplateBinding BorderThickness}" 
                  CornerRadius="3" SnapsToDevicePixels="true">
            <DockPanel>
              <ToggleButton x:Name="HeaderSite" 
                            ContentTemplate="{TemplateBinding HeaderTemplate}" 
                            Content="{TemplateBinding Header}" 
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                            DockPanel.Dock="Top" 
                            FontStretch="{TemplateBinding FontStretch}" 
                            Foreground="{TemplateBinding Foreground}" 
                            FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
                            FontStyle="{TemplateBinding FontStyle}" 
                            FontFamily="{TemplateBinding FontFamily}" 
                            FontWeight="{TemplateBinding FontWeight}" 
                            FontSize="{TemplateBinding FontSize}" 
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                                        RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                            Margin="1" 
                            MinWidth="0" MinHeight="0" 
                            Padding="{TemplateBinding Padding}" 
                            Style="{StaticResource ExpanderDownHeaderStyle}" 
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
              <ContentPresenter x:Name="ExpandSite" 
                                DockPanel.Dock="Bottom" 
                                Focusable="false" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                Margin="{TemplateBinding Padding}" 
                                Visibility="Collapsed"/>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
              <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
              <Setter Property="Style" TargetName="HeaderSite" 
                      Value="{StaticResource ExpanderRightHeaderStyle}"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
              <Setter Property="Style" TargetName="HeaderSite" 
                      Value="{StaticResource ExpanderUpHeaderStyle}"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
              <Setter Property="Style" TargetName="HeaderSite" 
                      Value="{StaticResource ExpanderLeftHeaderStyle}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
</ResourceDictionary>