<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:ALMACO.UI">


  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" StrokeDashArray="1 2" 
                     Stroke="{theme:ThemeResource ResourceKey=MutedAccent}" 
                     SnapsToDevicePixels="true" StrokeThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=ContentBackground}"/>
    <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=Complement}"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="Padding" Value="10,4"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Border x:Name="mainBorder" Background="{TemplateBinding Background}" 
                    BorderBrush="{theme:ThemeResource ResourceKey=Complement}"
                    BorderThickness="0" Margin="0">
              <Border x:Name="innerBorder" 
                      Background="{theme:ThemeResource ResourceKey=ContentBackground}" 
                      BorderBrush="{theme:ThemeResource ResourceKey=Complement}" 
                      BorderThickness="0" Margin="0" Opacity="0"/>
            </Border>

            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" 
                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                              TextBlock.FontFamily="Segoe UI Semibold" TextBlock.FontSize="22"
                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            
          </Grid>
          <ControlTemplate.Triggers>
            <!--## MOUSEOVER, PLACEMENT: LEFT-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="true"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Left"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="mainBorder" 
                      Value="{theme:ThemeResource ResourceKey=MouseOverBackground}"/>
            </MultiDataTrigger>

            <!--## MOUSEOVER, PLACEMENT: TOP-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="true"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Top"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="mainBorder" 
                      Value="{theme:ThemeResource ResourceKey=MouseOverBackground}"/>
            </MultiDataTrigger>

            <!--## MOUSEOVER, PLACEMENT: RIGHT-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="true"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Right"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="mainBorder" 
                      Value="{theme:ThemeResource ResourceKey=MouseOverBackground}"/>
            </MultiDataTrigger>

            <!--## MOUSEOVER, PLACEMENT: BOTTOM-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="true"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Bottom"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="mainBorder" 
                      Value="{theme:ThemeResource ResourceKey=MouseOverBackground}"/>
            </MultiDataTrigger>

            <!--## DISABLED, PLACEMENT: LEFT-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="false"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Left"/>
              </MultiDataTrigger.Conditions>
             <Setter Property="BorderThickness" TargetName="innerBorder" 
                      Value="0"/>
            </MultiDataTrigger>

            <!--## DISABLED, PLACEMENT: TOP-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="false"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Top"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
            </MultiDataTrigger>

            <!--## DISABLED, PLACEMENT: RIGHT-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="false"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Right"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="BorderThickness" TargetName="innerBorder" 
                      Value="0"/>
            </MultiDataTrigger>

            <!--## DISABLED, PLACEMENT: BOTTOM-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="false"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Bottom"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="BorderThickness" TargetName="innerBorder" 
                      Value="0"/>
            </MultiDataTrigger>

            <!--## IS SELECTED TRUE/FALSE  PLACEMENT: LEFT-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="false"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Left"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="TextBlock.Foreground" TargetName="contentPresenter"
                      Value="{theme:ThemeResource ResourceKey=DisabledForeground}"/>
              <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
              <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="true"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Left"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="TextBlock.Foreground" TargetName="contentPresenter"
                      Value="{theme:ThemeResource ResourceKey=ContentForeground}"/>
              <Setter Property="Panel.ZIndex" Value="1"/>
              <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
              <Setter Property="Margin" TargetName="mainBorder" Value="0,0,-1,0"/>
              <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
              <Setter Property="BorderThickness" TargetName="mainBorder" Value="5,1,0,1"/>
              <Setter Property="CornerRadius" TargetName="mainBorder" Value="5,0,0,5"/>
            </MultiDataTrigger>

            <!--## IS SELECTED TRUE/FALSE  PLACEMENT: TOP-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="false"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Top"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="TextBlock.Foreground" TargetName="contentPresenter"
                      Value="{theme:ThemeResource ResourceKey=DisabledForeground}"/>
              <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
              <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="true"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Top"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="TextBlock.Foreground" TargetName="contentPresenter"
                      Value="{theme:ThemeResource ResourceKey=ContentForeground}"/>
              <Setter Property="Panel.ZIndex" Value="1"/>
              <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
              <Setter Property="Margin" TargetName="mainBorder" Value="0,0,0,-1"/>
              <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
              <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,4,1,0"/>
              <Setter Property="CornerRadius" TargetName="mainBorder" Value="4,4,0,0"/>
            </MultiDataTrigger>

            <!--## IS SELECTED TRUE/FALSE  PLACEMENT: RIGHT-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="false"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Right"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="TextBlock.Foreground" TargetName="contentPresenter"
                      Value="{theme:ThemeResource ResourceKey=DisabledForeground}"/>
              <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
              <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="true"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Right"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="TextBlock.Foreground" TargetName="contentPresenter"
                      Value="{theme:ThemeResource ResourceKey=ContentForeground}"/>
              <Setter Property="Panel.ZIndex" Value="1"/>
              <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
              <Setter Property="Margin" TargetName="mainBorder" Value="-1,0,0,0"/>
              <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
              <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,5,1"/>
              <Setter Property="CornerRadius" TargetName="mainBorder" Value="0,5,5,0"/>
            </MultiDataTrigger>

            <!--## IS SELECTED TRUE/FALSE  PLACEMENT: BOTTOM-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="false"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Bottom"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="TextBlock.Foreground" TargetName="contentPresenter"
                      Value="{theme:ThemeResource ResourceKey=DisabledForeground}"/>
              <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
              <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" 
                           Value="true"/>
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" 
                           Value="Bottom"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="TextBlock.Foreground" TargetName="contentPresenter"
                      Value="{theme:ThemeResource ResourceKey=ContentForeground}"/>
              <Setter Property="Panel.ZIndex" Value="1"/>
              <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
              <Setter Property="Margin" TargetName="mainBorder" Value="0,-1,0,0"/>
              <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
              <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,4"/>
              <Setter Property="CornerRadius" TargetName="mainBorder" Value="0,0,4,4"/>
            </MultiDataTrigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
    <Setter Property="Padding" Value="2"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Background" Value="White"/>
    <Setter Property="BorderBrush" 
            Value="{theme:ThemeResource ResourceKey=SelectedBorder}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid x:Name="templateRoot" ClipToBounds="true" 
                SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0"/>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
              <RowDefinition x:Name="RowDefinition1" Height="*"/>
            </Grid.RowDefinitions>
            <TabPanel x:Name="headerPanel" Grid.Column="0" 
                      IsItemsHost="true" Margin="0" Grid.Row="0" 
                      KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
            <Border x:Name="contentPanel" 
                    Background="{theme:ThemeResource ResourceKey=ContentBackground}" 
                    BorderBrush="{theme:ThemeResource ResourceKey=Complement}" 
                    BorderThickness="0,1,0,0" 
                    Grid.Column="0" Grid.Row="1"
                    KeyboardNavigation.DirectionalNavigation="Contained" 
                    KeyboardNavigation.TabIndex="2" 
                    KeyboardNavigation.TabNavigation="Local">
              <ContentPresenter x:Name="PART_SelectedContentHost" 
                                ContentSource="SelectedContent" Margin="0" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter Property="BorderThickness" TargetName="contentPanel" Value="0,0,0,1"/>
              <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
              <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
              <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
              <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
              <Setter Property="Margin" TargetName="headerPanel" Value="0"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter Property="BorderThickness" TargetName="contentPanel" Value="1,0,0,0"/>
              <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
              <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
              <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
              <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
              <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
              <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
              <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
              <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
              <Setter Property="Margin" TargetName="headerPanel" Value="0"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter Property="BorderThickness" TargetName="contentPanel" Value="0,0,1,0"/>
              <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
              <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
              <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
              <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
              <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
              <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
              <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
              <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
              <Setter Property="Margin" TargetName="headerPanel" Value="0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>