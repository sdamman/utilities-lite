<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
  mc:Ignorable="d"
  xmlns:theme="clr-namespace:ALMACO.UI">



  <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
  <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
  
  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
  
  <Geometry x:Key="DownArrow">m3,0 l3,3 l3,-3 l1.5,1.5 l-4.5,4.5 l-4.5,-4.5 Z</Geometry>
  <Geometry x:Key="UpArrow">m1.5,4.5 l4.5,-4.5 l4.5,4.5 l-1.5,1.5 l-3,-3 l-3,3 Z</Geometry>
  <Geometry x:Key="RightArrow">m 1.5,1.5 l 4.5,4.5 l -4.5,4.5 l-1.5,-1.5 l3,-3 l-3,-3 z</Geometry>
  <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 
                              L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
  
  <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
    <Setter Property="ClickMode" Value="Hover"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Border x:Name="templateRoot" 
                  Background="{theme:ThemeResource ResourceKey=BoldHighlight}"
                  Opacity="0.4"
                  SnapsToDevicePixels="true"/>
            <ContentPresenter HorizontalAlignment="Center" 
                              Margin="6" VerticalAlignment="Center"/>

          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, 
        TypeInTargetAssembly={x:Type FrameworkElement}}" 
         BasedOn="{x:Null}" 
         TargetType="{x:Type ScrollViewer}">
    <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Grid.Column="0" Grid.Row="1">
              <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" 
                                      Margin="{TemplateBinding Padding}"/>
            </Border>
            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" 
                          CommandTarget="{Binding RelativeSource={RelativeSource 
                                          Mode=TemplatedParent}}" 
                          Grid.Column="0" Focusable="false" Grid.Row="0" 
                          Style="{StaticResource MenuScrollButton}">
              <RepeatButton.Visibility>
                <MultiBinding ConverterParameter="0" 
                              Converter="{StaticResource MenuScrollingVisibilityConverter}" 
                              FallbackValue="Visibility.Collapsed">
                  <Binding Path="ComputedVerticalScrollBarVisibility" 
                           RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                  <Binding Path="VerticalOffset" 
                           RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                  <Binding Path="ExtentHeight" 
                           RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                  <Binding Path="ViewportHeight" 
                           RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path Data="{StaticResource UpArrow}" 
                    Fill="{theme:ThemeResource ResourceKey=MinContrast}"/>
            </RepeatButton>
            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" 
                          CommandTarget="{Binding RelativeSource={RelativeSource 
                                          Mode=TemplatedParent}}" 
                          Grid.Column="0" Focusable="false" Grid.Row="2" 
                          Style="{StaticResource MenuScrollButton}">
              <RepeatButton.Visibility>
                <MultiBinding ConverterParameter="100" 
                              Converter="{StaticResource MenuScrollingVisibilityConverter}" 
                              FallbackValue="Visibility.Collapsed">
                  <Binding Path="ComputedVerticalScrollBarVisibility" 
                           RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                  <Binding Path="VerticalOffset" 
                           RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                  <Binding Path="ExtentHeight" 
                           RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                  <Binding Path="ViewportHeight" 
                           RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path Data="{StaticResource DownArrow}" 
                    Fill="{theme:ThemeResource ResourceKey=MinContrast}"/>
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, 
    TypeInTargetAssembly={x:Type MenuItem}}" 
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot" Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            SnapsToDevicePixels="true">
      <Grid VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon" ContentSource="Icon" 
                          HorizontalAlignment="Center" 
                          Height="16" Width="16" 
                          Margin="3"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                          VerticalAlignment="Center"/>
        <Path x:Name="GlyphPanel" 
              Data="{StaticResource Checkmark}" 
              FlowDirection="LeftToRight" 
              Fill="{theme:ThemeResource ResourceKey=MinContrast}" 
              Margin="3" 
              VerticalAlignment="Center" 
              Visibility="Collapsed"/>
        <ContentPresenter ContentSource="Header"
                          Grid.Column="1" 
                          Margin="{TemplateBinding Padding}" 
                          RecognizesAccessKey="True" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="true">
        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=LightBlueTranslucent}"/>
        <Setter Property="BorderBrush" TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=LightBlue}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="TextBlock.Opacity" TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
        <Setter Property="Opacity" TargetName="GlyphPanel" 
                Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsHighlighted" Value="True"/>
          <Condition Property="IsEnabled" Value="False"/>
        </MultiTrigger.Conditions>
        <Setter Property="Background" TargetName="templateRoot" 
                Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
        <Setter Property="BorderBrush" TargetName="templateRoot" 
                Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, 
    TypeInTargetAssembly={x:Type MenuItem}}" 
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot" 
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            SnapsToDevicePixels="true">
      <Grid VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon" ContentSource="Icon" 
                          HorizontalAlignment="Center" 
                          Height="16" Width="16" 
                          Margin="3" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                          VerticalAlignment="Center"/>
        <Path x:Name="GlyphPanel" 
              Data="{StaticResource Checkmark}" 
              FlowDirection="LeftToRight" 
              Fill="{TemplateBinding Foreground}" 
              Margin="3" VerticalAlignment="Center" 
              Visibility="Collapsed"/>
        <ContentPresenter ContentSource="Header" 
                          Grid.Column="1" 
                          Margin="{TemplateBinding Padding}" 
                          RecognizesAccessKey="True" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" 
               Focusable="false" 
               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
               Placement="Bottom" 
               PlacementTarget="{Binding ElementName=templateRoot}">
          <Border x:Name="SubMenuBorder" 
                  Background="{theme:ThemeResource ResourceKey=ComplementColor}" 
                  BorderBrush="{theme:ThemeResource ResourceKey=BoldHighlight}" 
                  BorderThickness="1" Padding="2">
            <ScrollViewer x:Name="SubMenuScrollViewer" 
                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, 
              TypeInTargetAssembly={x:Type FrameworkElement}}}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas HorizontalAlignment="Left" 
                        VerticalAlignment="Top" 
                        Height="0" Width="0">
                  <Rectangle x:Name="OpaqueRect" 
                             Fill="{Binding Background, ElementName=SubMenuBorder}" 
                             Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                             Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                </Canvas>
                <Rectangle Fill="{theme:ThemeResource ResourceKey=BoldHighlight}" 
                           HorizontalAlignment="Left"
                           Margin="29,2,0,2" Width="1"/>
                <ItemsPresenter x:Name="ItemsPresenter" 
                                KeyboardNavigation.DirectionalNavigation="Cycle" 
                                Grid.IsSharedSizeScope="true" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                KeyboardNavigation.TabNavigation="Cycle"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSuspendingPopupAnimation" Value="true">
        <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
      </Trigger>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="true">
        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=LightBlueTranslucent}"/>
        <Setter Property="BorderBrush" TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=LightBlue}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="TextBlock.Opacity" TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
        <Setter Property="Opacity" TargetName="GlyphPanel" 
                Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
      </Trigger>
      <Trigger Property="ScrollViewer.CanContentScroll" 
               SourceName="SubMenuScrollViewer" Value="false">
        <Setter Property="Canvas.Top" TargetName="OpaqueRect" 
                Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
        <Setter Property="Canvas.Left" TargetName="OpaqueRect" 
                Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, 
    TypeInTargetAssembly={x:Type MenuItem}}" 
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot" 
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            Height="22" 
            SnapsToDevicePixels="true">
      <Grid Margin="-1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="22" Width="Auto" 
                            SharedSizeGroup="MenuItemIconColumnGroup"/>
          <ColumnDefinition Width="13"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="30"/>
          <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
          <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon" 
                          ContentSource="Icon" 
                          HorizontalAlignment="Center" 
                          VerticalAlignment="Center" 
                          Height="16" Width="16"
                          Margin="3" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Border x:Name="GlyphPanel" 
                Background="{theme:ThemeResource ResourceKey=LightBlueTranslucent}" 
                BorderBrush="{theme:ThemeResource ResourceKey=LightBlue}" 
                BorderThickness="1" 
                ClipToBounds="False" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Center" 
                Visibility="Hidden" 
                Width="22" Height="22" 
                Margin="-1,0,0,0">
          <Path x:Name="Glyph" 
                Data="{StaticResource Checkmark}" 
                FlowDirection="LeftToRight" 
                Fill="{theme:ThemeResource ResourceKey=MinContrast}" 
                Height="11" Width="10"/>
        </Border>
        <ContentPresenter x:Name="menuHeaderContainer" 
                          ContentSource="Header" 
                          Grid.Column="2" 
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Center" 
                          Margin="{TemplateBinding Padding}" 
                          RecognizesAccessKey="True" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        <TextBlock x:Name="menuGestureText" 
                   Grid.Column="4" 
                   Margin="{TemplateBinding Padding}" 
                   Opacity="0.7" 
                   Text="{TemplateBinding InputGestureText}" 
                   VerticalAlignment="Center"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=LightBlueTranslucent}"/>
        <Setter Property="BorderBrush" TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=LightBlue}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="TextBlock.Opacity" 
                TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
        <Setter Property="Opacity" TargetName="Glyph" 
                Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsHighlighted" Value="True"/>
          <Condition Property="IsEnabled" Value="False"/>
        </MultiTrigger.Conditions>
        <Setter Property="Background" TargetName="templateRoot" 
                Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
        <Setter Property="BorderBrush" TargetName="templateRoot" 
                Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, 
    TypeInTargetAssembly={x:Type MenuItem}}" 
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot" 
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            Height="22" SnapsToDevicePixels="true">
      <Grid Margin="-1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
          <ColumnDefinition Width="13"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="30"/>
          <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
          <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon" 
                          ContentSource="Icon" 
                          HorizontalAlignment="Center" 
                          VerticalAlignment="Center" 
                          Height="16"  Width="16"
                          Margin="3" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        <Border x:Name="GlyphPanel" 
                Background="{theme:ThemeResource ResourceKey=LightBlueTranslucent}" 
                BorderBrush="{theme:ThemeResource ResourceKey=LightBlue}" 
                BorderThickness="1" 
                Height="22" Width="22" 
                Margin="-1,0,0,0" 
                VerticalAlignment="Center" 
                Visibility="Hidden">
          <Path x:Name="Glyph" 
                Data="{DynamicResource Checkmark}" 
                FlowDirection="LeftToRight" 
                Fill="{theme:ThemeResource ResourceKey=MinContrast}" 
                Height="11" Width="9"/>
        </Border>
        <ContentPresenter ContentSource="Header" 
                          Grid.Column="2" 
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Center" 
                          Margin="{TemplateBinding Padding}" 
                          RecognizesAccessKey="True" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        <TextBlock Grid.Column="4" 
                   Margin="{TemplateBinding Padding}" 
                   Opacity="0.7" 
                   Text="{TemplateBinding InputGestureText}" 
                   VerticalAlignment="Center"/>
        <Path x:Name="RightArrow" Grid.Column="5" 
              Data="{StaticResource RightArrow}" 
              Fill="{theme:ThemeResource ResourceKey=MinContrast}" 
              HorizontalAlignment="Left" 
              VerticalAlignment="Center"
              Margin="10,0,0,0"/>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" 
               Focusable="false" 
               HorizontalOffset="-2" 
               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
               Placement="Right" 
               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
               VerticalOffset="-3">
          <Border x:Name="SubMenuBorder" 
                  Background="{theme:ThemeResource ResourceKey=ComplementColor}" 
                  BorderBrush="{theme:ThemeResource ResourceKey=BoldHighlight}" 
                  BorderThickness="1" 
                  Padding="2">
            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource 
              {ComponentResourceKey ResourceId=MenuScrollViewer, 
              TypeInTargetAssembly={x:Type FrameworkElement}}}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas HorizontalAlignment="Left"
                        VerticalAlignment="Top"  
                        Height="0" Width="0">
                  <Rectangle x:Name="OpaqueRect" 
                             Fill="{Binding Background, ElementName=SubMenuBorder}" 
                             Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                             Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                </Canvas>
                <Rectangle Fill="{theme:ThemeResource ResourceKey=BoldHighlight}" 
                           HorizontalAlignment="Left" 
                           Margin="29,2,0,2" Width="1"/>
                <ItemsPresenter x:Name="ItemsPresenter" 
                                KeyboardNavigation.DirectionalNavigation="Cycle" 
                                Grid.IsSharedSizeScope="true" 
                                SnapsToDevicePixels="True" 
                                KeyboardNavigation.TabNavigation="Cycle"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSuspendingPopupAnimation" Value="true">
        <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
      </Trigger>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
        <Setter Property="BorderBrush" TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=LightBlue}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="TextBlock.Opacity" TargetName="templateRoot" 
                Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
        <Setter Property="Opacity" TargetName="Glyph" 
                Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
        <Setter Property="Opacity" TargetName="RightArrow" 
                Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
      </Trigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" 
               Value="false">
        <Setter Property="Canvas.Top" TargetName="OpaqueRect"
                Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
        <Setter Property="Canvas.Left" TargetName="OpaqueRect" 
                Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="HorizontalContentAlignment" 
            Value="{Binding HorizontalContentAlignment, 
      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment"
            Value="{Binding VerticalContentAlignment, 
      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Template" 
            Value="{DynamicResource 
      {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, 
      TypeInTargetAssembly={x:Type MenuItem}}}"/>
    <Style.Triggers>
      <Trigger Property="Role" Value="TopLevelHeader">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=MinContrast}"/>
        <Setter Property="Template" 
                Value="{DynamicResource 
          {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, 
          TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Setter Property="Padding" Value="6,0"/>
      </Trigger>
      <Trigger Property="Role" Value="TopLevelItem">
        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=ComplementColor}"/>
        <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=BoldHighlight}"/>
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=MinContrast}"/>
        <Setter Property="Template" 
                Value="{DynamicResource 
          {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, 
          TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Setter Property="Padding" Value="6,0"/>
      </Trigger>
      <Trigger Property="Role" Value="SubmenuHeader">
        <Setter Property="Template" Value="{DynamicResource 
          {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, 
          TypeInTargetAssembly={x:Type MenuItem}}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>


  <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
    <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="FontStyle" Value="Normal"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=MinContrast}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Background="{theme:ThemeResource ResourceKey=ComplementColor}" 
                  d:Background="{StaticResource brushUranianBlue}"
                  BorderBrush="{theme:ThemeResource ResourceKey=MutedAccent}"
                  d:BorderBrush="{StaticResource brushCombineBlue}"
                  SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="True"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>



</ResourceDictionary>